server:
  port: ${SERVER_PORT:8100}
  shutdown: graceful

spring:

  application:
    name: "Authorizer Validation"
    label: "authorizer-validation"

  banner:
    location: banner.txt

  threads:
    virtual:
      enabled: true

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
      - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration

  cloud:

    aws:
      region:
        static: ${AWS_REGION}
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      dynamodb:
        endpoint: ${AWS_DYNAMODB_ENDPOINT}
      sqs:
        client:
          max-concurrency: 50
          max-pending-connection-acquires: 100
          connection-acquisition-timeout: 2
          connection-timeout: 1
          connection-time-to-live: 600
        region: ${spring.cloud.aws.region.static}
        endpoint: ${AWS_SQS_ENDPOINT}
        queue:
          account-transaction-queue-name: account-transaction.fifo
          account-transaction-dlq-name: account-transaction-dlq.fifo
        listener:
          max-concurrent-messages: 10
          max-messages-per-poll: 1
          poll-timeout-seconds: 1
          message-visibility-seconds: 30
          acknowledgement-mode: MANUAL
          acknowledgement-interval-seconds: 1
          acknowledgement-threshold: 1
          back-pressure-mode: FIXED_HIGH_THROUGHPUT

  grpc:
    client:
      channels:
        current-balance:
          address: ${GRPC_ENDPOINT}
        execute-transaction:
          address: ${GRPC_ENDPOINT}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    metrics:
      access: unrestricted
    prometheus:
      access: unrestricted
  metrics:
    distribution:
      percentiles-histogram:
        "[grpc.server.requests]": true
        "[transaction.processing.duration]": true
      percentiles:
        "[grpc.server.requests]": 0.5, 0.95, 0.99
        "[transaction.processing.duration]": 0.5, 0.95, 0.99
      sla:
        "[transaction.processing.duration]": 100ms, 500ms, 1s, 2s, 5s

    tags:
      application: authorizer-validation
      service: validation
      environment: ${ENVIRONMENT:local}
  prometheus:
    metrics:
      export:
        enabled: true
        step: 10s
        descriptions: true

logging:
  pattern:
    console: "%d{yyyy-MM-dd'T'HH:mm:ss.SSSSSSZ} %-5p %c:%M{1}:%L - %m%n"
  level:
    root: INFO
