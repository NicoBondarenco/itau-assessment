server:
  port: ${SERVER_PORT:8200}
  shutdown: graceful

spring:

  application:
    name: "Authorizer Authorization"
    label: "authorizer-authorization"

  banner:
    location: banner.txt

  threads:
    virtual:
      enabled: true

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
      - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration

  cloud:

    aws:
      region:
        static: ${AWS_REGION}
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      dynamodb:
        endpoint: ${AWS_DYNAMODB_ENDPOINT}

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus"
  endpoint:
    health:
      show-details: always
    metrics:
      access: read_only
    prometheus:
      access: read_only
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
        "[grpc.server.requests]": true
        "[authorization.processing.time]": true
      percentiles:
        "[http.server.requests]": 0.5, 0.95, 0.99
        "[grpc.server.requests]": 0.5, 0.95, 0.99
        "[authorization.processing.time]": 0.5, 0.95, 0.99
    tags:
      application: ${spring.application.name}
      service: "authorization"
      environment: ${ENVIRONMENT:local}
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  pattern:
    console: "%d{yyyy-MM-dd'T'HH:mm:ss.SSSSSSZ} %-5p %c:%M{1}:%L - %m%n"
  level:
    root: INFO
